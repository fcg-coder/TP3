//
//  ellipse_CHILD.cpp
//  ТП3_19
//
//  Created by mak on 19.05.2023.
//
#include <math.h>
#include <fstream>
#include "ellipse_CHILD.hpp"
using namespace std;

ellipse::ellipse(double x1, double a1, double b1 ){
    /*Уравнение эллипса вида $y = f(x)$ можно получить путем решения уравнения общего вида, приведенного в моем предыдущем ответе, относительно переменной $y$. Например, для эллипса с центром в точке $(0, 0)$ и большой полуосью $a$, малой полуосью $b$ уравнение вида $y = f(x)$ будет иметь вид:
     
     $ y = b \cdot \sqrt{1 - \frac{x^2}{a^2}} $
     y = b \cdot \sqrt{1 - \frac{x^2}{a^2}}
     
     
     
     Здесь мы использовали то факт, что если точка $(x,y)$ лежит на эллипсе, то ее расстояние до центра эллипса должно удовлетворять уравнению:

     $\frac{(x-x_c)^2}{a^2}+\frac{(y-y_c)^2}{b^2}=1$

     Используя это уравнение, мы можем выразить $y$ через $x$, используя знание координат центра эллипса $(x_c,y_c)$ и полуосей a и b. В данном случае центр находится в точке (0, 0), поэтому координаты центра равны $x_c=0$ и $y_c=0$.

*/
    cout << "Уравнение элипса имеет вид у =  b * sqrt( 1 - (x*x) / (a*a))";

    x = x1;

    a = a1;
    b = b1;
}


ellipse::ellipse(){
    ifstream e("Et.txt");
    e >> x;
    e >> a;
    e >> b;
    cout << "Из файла взяли значения х =" << x << ", к = " << a << ", в = " << b << "\n";
    e.close();
}
void ellipse::calculate(){
    ofstream E("E.txt");
    E.close();
    double y = b * sqrt( 1 - (x*x) / (a*a));
    cout << "y = "<< y << "\n";
    E << "y = "<< y << "\n";
};
